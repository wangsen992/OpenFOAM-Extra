/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      phaseProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// type	interfaceCompositionAtmThermalPhaseChangePopulationBalanceMultiphaseSystem; 
type	atmThermalPhaseChangePopulationBalanceMultiphaseSystem; 
// type	atmThermalPhaseChangeMultiphaseSystem; 

/* * Initiated from phaseSystem.H * */
referencePhase		air;

volatile			H2O;
pressureImplicit				false;
phases (air water);

populationBalances (droplets);

air
{
		// Used in phaseModelNew.C
		type						multiComponentAtmPhaseModel;

		// loaded in phaseModel.C
		residualAlpha		1e-40;
		// optional
		alphaMax				1.0;
		alphaMin				0.0;

		diameterModel		constant;
		constantCoeffs
		{
			d							1;
		}

}

water
{
		// Used in phaseModelNew.C
		type						multiComponentIsothermalAtmPhaseModel;

		carrierPhase		air;

		// loaded in phaseModel.C
		residualAlpha		1e-50;
		// optional
		alphaMax				1.0;
		alphaMin				0.0;

		diameterModel		velocityGroup;

    velocityGroupCoeffs
    {
        populationBalance   droplets;

        shapeModel          spherical;

        sizeGroups
        (
            f01{dSph 4.000E-06; value 0.25; kappa 1.5E+10; Df 1.8; alphaC 1;}
            f02{dSph 5.769E-06; value 0.25; kappa 1.5E+10; Df 1.8; alphaC 1;}
            f03{dSph 8.320E-06; value 0.25; kappa 1.5E+10; Df 1.8; alphaC 1;}
            f04{dSph 1.200E-05; value 0.25; kappa 1.5E+10; Df 1.8; alphaC 1;}
            f05{dSph 1.731E-05; value 0.0;	kappa 1.5E+10; Df 1.8; alphaC 1;}
            f06{dSph 2.496E-05; value 0.0; 	kappa 1.5E+10; Df 1.8; alphaC 1;}
            f07{dSph 3.600E-05; value 0.0; 	kappa 1.5E+10; Df 1.8; alphaC 1;}
            f08{dSph 5.192E-05; value 0.0; 	kappa 1.5E+10; Df 1.8; alphaC 1;}
            f09{dSph 7.488E-05; value 0.0; 	kappa 1.5E+10; Df 1.8; alphaC 1;}
            f10{dSph 1.080E-04; value 0.0; 	kappa 1.5E+10; Df 1.8; alphaC 1;}
            f11{dSph 1.558E-04; value 0.0; 	kappa 1.5E+10; Df 1.8; alphaC 1;}
            f12{dSph 2.246E-04; value 0.0; 	kappa 1.5E+10; Df 1.8; alphaC 1;}
            f13{dSph 3.240E-04; value 0.0; 	kappa 1.5E+10; Df 1.8; alphaC 1;}
        );
    }
		constantCoeffs
		{
			d							1e-5;
		}

}

populationBalanceCoeffs
{
    droplets
    {
        continuousPhase air;

        coalescenceModels
        (
            BrownianCollisions
            {
								// Correct collision model is needed. Right now 
								// there is no coalescense and only one bin is occupied. 
                sigma           1e-2;
            }
        );

        binaryBreakupModels
        ();

        breakupModels
        ();

        driftModels
        (
						phaseChange
						{
								pairs ((water and air));
								dmdtf  thermalPhaseChange:dmdtf;
						}
				);

        nucleationModels
        (
            reactionDriven
            {
                nucleationDiameter  5.769E-06;
                velocityGroup       water;
                reactingPhase       air;
                dmdtf               thermalPhaseChange:nucleation:dmdtf;
                specie              H2O;
            }
        );
    }
}
blending
{
		default
		{
					type							linear;
					minFullyContinuousAlpha.air		0.7;
					minPartlyContinuousAlpha.air		0.3;
					minFullyContinuousAlpha.water		0.7;
					minPartlyContinuousAlpha.water		0.3;
		}

		heatTransfer
		{
					type							linear;
					minFullyContinuousAlpha.air		1.0;
					minPartlyContinuousAlpha.air		0.0;
					minFullyContinuousAlpha.water		1.0;
					minPartlyContinuousAlpha.water		0.0;
		}

		diffusiveMassTransfer
		{
				$heatTransfer;
		}
}


/* * * in MomentumTransferPhaseSystem.C * * */
drag
(
		(water in air)
		{
			type		aerosolDrag;
			sigma		1;
		}
);

virtualMass
(
		(water in air)
		{
			type		Lamb;
		}
);

lift
(
		(water in air)
		{
			type		none;
		}
);

wallLubrication
();

turbulentDispersion
(
		(water in air)
		{
			type		Gosman;
			sigma		1;
		}
);

interfaceCompression
();

surfaceTension
();

aspectRatio
();
/* * * in OneResistanceHeatTransferPhaseSystem.C * * */
heatTransfer.water
(
		(water in air)
		{
			type		constantNu;
			Nu			1; // shut off heat transfer between phases
		}
);

heatTransfer.air
(
		(water in air)
		{
			type		constantNu;
			Nu			0; // shut off heat transfer between phases
		}
);

saturation
(
		(air and water)
		{
			type	ArdenBuck;
		}
);
/* * * in PhaseTransferPhaseSystem.C * * */
phaseTransfer
();

/* * * in InterfaceCompositionPhaesChangeSystem.C * * */
nInterfaceCorrectors		2;

interfaceComposition.air
(
		(air and water)
		{
				type		saturated;
				species		( H2O );
				Le			1;
				saturationPressure
				{
					type		ArdenBuck;
				}
		}
);
interfaceComposition.water
();

myLe		1e4;
diffusiveMassTransfer.air
(
	(air in water)
	{
		type	spherical;
		Le		$myLe;
	}
	(water in air)
	{
		type	spherical;
		Le		$myLe;
	}
);

diffusiveMassTransfer.water
(
	(air in water)
	{
		type	spherical;
		Le		$myLe;
	}
	(water in air)
	{
		type	Frossling;
		Le		$myLe;
	}
);
